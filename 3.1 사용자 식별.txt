
'svc_id'@'192.168.0.10' (이 계정의 비밀번호는 123)
'svc_id'@'%' (이 계정의 비밀번호는 abc)

IP 주소가 192.168.0.10인 PC에서 MySQL 서버에 접속할 때 MySQL 서버가 첫 번째 계정 정보를 이용해 인증을 실행할지

즉 위 두 계정 정보 가운데 범위가 좁은 것은 %가 포함되지 않은 `svc_id@`@`192.168.0.10` 이다.

192.168.0.10인 PC에서 svc_id라는 아이디와 abc라는 비밀번호를 입력하면 비밀번호가 일치하지 않는다.
라는 이유로 접속이 거절될 것이다.

select user, host, account_locked from mysql.user where user like 'mysql.%';

# 위에 언급한 2개의 계정은 (acccount_locked 칼럼) 있는 상태이므로 의도적으로 잠긴 계정을 풀지 않는 한 악의적인 용도로 사용할 수 없으므로 보안을 걱정하지 않아도 됨

MySQL 5.7 버전까지는 GRANT 명령으로 권한의 부여와 동시에 계정 생성이 가능했다.

create user 'user'@'%'
    identified with 'mysql_native_password' by 'password'
    require none
    password expire interval 30 day
    account unlock
    # password history default
    # password reuse interval default
    # password require current default
    ;

5.7 항목은 주석된 구문이 실행이 안된다.

identified with '{인증방식}'

인증방식에는 Native Pluggable Authentication: 
5.7버전까지 기본으로 사용되던 방식으로 비밀번호에 대한 SHA-1 알고리즘 값을 저장해 두고 클라이언트가 
보낸 값과 해시값이 일치하는지 비교하는 인증 방식이다.

Caching SHA-2 Pluggable Authentication: 
5.6버전에 도입되고 8.0에서는 조금더 보안된 인증 방식으로, 암호화 해시값 생성을 위해 SHA-2(256비트) 알고리즘을
사용한다. Native Authentication과의 가장 큰 차이는 사용되는 암호화 해시 알고리즘의 차이이며, SHA-2 Authentication
은 저장된 해시값의 보안에 더 중점을 둔 알고리즘으로 이해할 수 있다.

PAM Pluggable Authentication: 유닉스나 리눅스 패스워드 또는 LDAP(Lightweight Directory Access Protocol) 같은
외부 인증을 사용할 수 있게 해주는 인증 방식으로, MySQL 엔터프라이즈 에디션에서만 사용 가능하다.

LDAP Pluggable Authentication: LDAP을 이용한 외부 인증을 사용할 수 있게 해주는 인증 방식으로, MySQL 엔터
프라이즈 에디션에서만 사용 가능하다.

MySQL 5.7 버전까지는 Native Authentication이 기본 인증 방식으로 사용됐지만 MySQL 8.0 버전부터는 
Caching SHA-2 Authentication이 기본 인증으로 바뀌었다.

SSL/TLS 또는 RSA 키페어를 필요로 하기 때문에 기존 MySQL 5.7까지의 연결 방식과는 다른 방식으로 접속해야 한다.

- require 
require 서버 접속할때 암호화된 SSL/TLS 채널을 사용할지 여부를 결정한다. 만약 별도로 설정하지 않으면
비암호화 채널로 연결하게 된다.

- password expire
비밀번호의 유효 기간을 설정하는 옵션이며, 별도로 명시하지 않으면 default_password_lifetime 시스템 변수에
저장된 기간으로 유효 기간이 설정된다. 

psasword expire: 계정 생성과 동시에 비밀번호의 만료 처리
password expire never: 계정 비밀번호의 만료 기간 없음
password expire default: default_password_lifetime 시스템 변수에 저장된 기간으로 비밀번호의 유효 기간을
설정

password expire interval n day : 비밀 번호 유효 기간을 오늘부터 n일자로 설정

- password history
한 번 사용했던 비밀번호를 재사용하지 못하게 설정하는 옵션인데, password history 절에 설정 가능한 옵션은
다음과 같다.

password history default: password history 시스템 변수에 저장된 개수 만큼 비밀번호의 이력을 저장하며
저장된 이력에 남아있는 비밀번호는 재사용 할 수 없다.

password history n: 비밀번호의 이력을 최근 n개까지만 저장하며, 저장된 이력에 남아있는 비밀번호는 재사용
할 수 없다.

한번 사용했던 비밀번호를 사용하지 못하게 하려면 mysql DB의 password_history 테이블을 사용한다.

5.7버전에서는 password_history가 없음

- password reuse interval (5.7 사용안함)
한 번 사용했던 비밀번호의 재사용 금지 기간을 설정하는 옵션이며, 별도로 명시하지 않으면 password_reuse_inter
val 시스템 변수에 저장된 기간으로 설정된다. 

- password requre (5.7 사용안함)
비밀번호가 만료되어 새로운 비밀번호로 변경할 때 현재 비밀번호(변경하기 전 만료된 비밀번호)를 필요로 할지 결정
하는 옵션이다.

- account lock / unlock
계정 생성 시 또는 alter user 명령을 사용해 계정 정보를 변경할 때 계정을 사용하지 못하게 잠글지 여부를 결정
한다.

    - account lock: 계정을 사용하지 못하게 잠금
    - account unlock: 잠긴 계정을 다시 사용 가능 상태로 잠금 해제


mysql> install component 'file://component_validate_password'; (5.7 에서 사용안됨)

5.7 버전까지는 validate_password 가 플러그인 형태로 제공되었다. 8.0에서는 component 형태로 제공

select * from mysql.plugin where name = 'validate_password';



















