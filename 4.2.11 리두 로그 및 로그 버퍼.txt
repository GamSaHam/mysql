
리두 로그(Redo Log)는 트랜잭션의 4가지 요소인 ACID 중에서 D(Durable)에 해당하는 영속성과 가장 밀접하게 연관돼 있다.

리두 로그는 하드웨어나 소프트웨어 등 여러 가지 문제점으로 인해 MySQL 서버가 비정상적으로 종료됐을 때 데이터 파일에 기록되지 못한 데이터를
잃지 않게 해주는 안전 장치이다.

MySQL 서버를 포함한 대부분 데이터베이스 서버는 데이터 변경 내용을 로그로 먼저 기록한다. 거희 모든 DBMS에서 데이터 파일은 쓰기보다
읽기 성능을 고려한 자료 구조를 가지고 있기 때문에 데이터 파일 쓰기는 디스크의 랜덤 액세스가 필요하다. 
그래서 변경된 데이터를 데이터 파일에 기록하려면 상대적으로 큰 비용이 필요하다. 이로 인한 성능 저하를 막기 위해 데이터베이스 서버는
쓰기 비용이 낮은 자료 구조를 가진 리두 로그를 가지고 있으며, 비정상 종료가 발생하면 리두 로그의 내용을 이용해 데이터 파일을 다시
서버가 종료 되기 직전의 상태로 복구한다. 데이터베이스 서버는 ACID도 중요하지만 성능도 중요하기 때문에 데이터 파일뿐만 아니라
리두 로그를 버퍼링할 수 있는 InnoDB 버퍼 풀이나 리두 로그를 버퍼링할 수 있는 로그 버퍼와 같은 자료 구조도 가지고 있다.

MySQL 서버가 비정상 종료되는 경우 InnoDB 스토리지 엔진의 데이터 파일은 다음과 같은 두 가지 종류의 일관되지 않은 데이터를 가질 수 있다.
1. 커밋됐지만 데이터 파일에 기록되지 않은 데이터
2. 롤백됐지만 데이터 파일에 이미 기록된 데이터

1번의 경우라면 리두 로그에서 저장된 데이터를 파일에 다시 복사하기만 하면 된다.
2번의 경우에는 리두 로그로는 해결할 수 이때는 변경되기 전 데이터를 가진 언두 로그의 내용을 가져와 데이터 파일에 복사하면 된다.
여기서 리두 로그는 최소한 그 변경이 커밋됐는지, 롤백됐는지, 아니면 트랜잭션의 실행 중간 상태였는지를 확인하기 위해 필요하다.

리두 로그는 트랙잭션이 커밋되면 즉시 디스크로 기록되도록 시스템 변수를 설정하는 것을 권장한다.
하지만 이처럼 트랜잭션이 커밋 될 때마다 리두 로그를 디스크에 기록하는 작업은 많은 부하를 유발한다. 그래서 InnoDB 스토리지 엔진에서
리두 로그를 어느 주기로 디스크에 동기화할지를 결정하는 innodb_flush_log_at_trx_commit 시스템 변수를 제공한다. 

innodb_flush_log_at_trx_commit: 0: 1초에 한번씩 리두 로그를 디스크로 기록(write)하고 동기화(sync)를 실행한다.
1: 매번 트랜잭션이 커밋 될 때마다 디스크로 기록되고 동기화를 수행한다.
2: 매번 트랙잭션이 커밋 될때마다 디스크로 기록 되지만 실직적인 동기화하는 1초에 한번씩 실행된다. MySQL 서버와 운영체제가 모두
비정상적으로 종료되면 최근 1초 동안의 트랜잭션 데이터는 살아 질수도 있다. 리두 로그는 1초 정도 손실이 발생할 수 있다.

로그 버퍼의 크기는 기본값인 16MB 수준에서 설정하는 것이 적합한다. BLOB이나 TEXT 같이 큰 데이터를 자주 변경하는 경우에는 더 크게 설정
하는 것이 좋다.








