
5.5 부터는 InnoDB 스토리지 엔진이 기본 스토리지 엔진으로 채택
8.0 부터 MySQL 서버의 모든 시스템 테이블이 InnoDB 스토리지 엔진으로 교체됐다.
MyISAM에서만 지원되는 전문 검색 공간좌표도 InnoDB 스토리지 엔진도 지원하도록 변경

MyISAM 스토리지 엔진의 기능은 도태되는 상황이며, 이후 버전에는 MyISAM 스토리지 엔진은 없어질 것으로 예상한다.

MyISAM이나 MEMORY 스토리지 엔진에 대한 성능상 장점을 기대하는 사용자들이 있는데, 5.1과 5.5 버전이라면 의미가 있는 비교겠지만 
8.0부터는 더이상 무의미한 비교가 될 것으로 보인다. 

MySQL 서버는 사용자의 쿼리를 처리하기 위해 내부적으로 임시 테이블을 사용할 수도 있다.
5.7버전까지만 해도 MEMORY 스토리지 엔진이 내부 임시 테이블의 용도로 사용됐다. 

4.3 MyISAM 스토리지 엔진 아키텍처
MyISAM 스토리지 엔진의 성능에 영향을 미치는 요소인 키 캐시와 운영체제의 캐시/버퍼에 대해 살펴보자. 

MySQL 엔진(SQL 옵티마이저 -> SQL 실행기)
<-> 메모리(MyISAM 스토리지 엔진, MyISAM 키 캐시)
<-> 운영체제(운영체제의 캐시&버퍼)
<-> 디스크(데이터, 인덱스 파일)

키 캐시
InnoDB 버퍼 풀과 비슷한 역할을 하는 것이 MyISAM의 키 캐시(Key cache, 키 버퍼라고도 불림)다.
하지만 이름 그대로 MyISAM 키 캐시는 인덱스만을 대상으로 작동하며, 또한 인덱스의 디스크 쓰기 작업에 대해서만 부분적으로 버퍼링 역할을 한다.
키 캐시 히트율(Hit rate) = 100 - (Key_reads / Key_read_request * 100)

mysql> SHOW GLOBAL STATUS LIKE 'Key%';
+------------------------+-------+
| Variable_name          | Value |
+------------------------+-------+
| Key_blocks_not_flushed | 0     |
| Key_blocks_unused      | 6691  |
| Key_blocks_used        | 7     |
| Key_read_requests      | 14    |
| Key_reads              | 7     |
| Key_write_requests     | 0     |
| Key_writes             | 0     |
+------------------------+-------+
7 rows in set (0.00 sec)

메뉴얼에서는 일반적으로 키 캐시를 이용한 쿼리의 비율(Hit rate)를 99% 이상으로 유지하라고 권장한다.
히트율이 99% 미만이면 키 캐시를 조금 더 크게 설정하는 것이 좋다. 하지만 32비트 운영체제에서는 하나의 키 캐시에 4GB 이상의 메모리
공간을 설정할 수 잇다. 제한 값 이상의 키 캐시를 할당하고 싶다면 기본(Default) 키 캐시 이외에 별도의 명명된 키 캐시 공간을 설정해야
한다. 


